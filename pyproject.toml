[tool.poetry]
name = "neomate-ai"
version = "0.1.0"
description = "A highly advanced, offline-first, open-source AI assistant."
authors = ["NeoMate Team <team@neomate.ai>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/yourusername/neomate-ai"
repository = "https://github.com/yourusername/neomate-ai"
documentation = "https://neomate-ai.readthedocs.io/"
keywords = ["ai", "assistant", "automation", "voice", "vision", "open-source"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
# Core System & Environment
psutil = "^5.9.0"
py-cpuinfo = "^9.0.0"
pyyaml = "^6.0.3"
loguru = "^0.7.0"
pydantic = "^2.0.0"

# Perception Engine (Hyper-Aware Senses)
pyaudio = "^0.2.13"
pvporcupine = "^3.0.0"
faster-whisper = "^0.10.0"
pyannote-audio = "^3.0.0"
webrtcvad = "^2.0.10"
# rnnoise = "^0.1.0"  # Commented out as package not available on PyPI
speechbrain = "^0.5.16"
mss = "^9.0.1"
pywin32 = {version = "^306", markers = "sys_platform == 'win32'"}
python-xlib = {version = "^0.33", markers = "sys_platform == 'linux'"}
easyocr = "^1.7.1"
ultralytics = "^8.0.0"  # For YOLOv8
opencv-python = "^4.8.0"

# Cognitive Core (The Sentient Brain)
langchain = "^0.1.0"
aiohttp = "^3.9.0"
llama-cpp-python = "^0.2.0"
duckduckgo-search = "^5.0.0"
beautifulsoup4 = "^4.12.0"
requests = "^2.31.0"
chromadb = "^0.4.0"
tinydb = "^4.8.0"
meilisearch = "^0.28.0"

# Action & Expression Engine (The Body & Voice)
pyautogui = "^0.9.54"
pynput = "^1.7.6"
pycaw = {version = "^20230407", markers = "sys_platform == 'win32'"}
pyalsaaudio = {version = "^0.11.0", markers = "sys_platform == 'linux'"}
pyside6 = {version = "^6.8.0", python = ">=3.9,<3.13"}
coqui-tts = {version = "^0.22.0", python = ">=3.11,<3.12"}
plyer = "^2.1.0"
rich = "^13.7.0"

# AI Foundation
torch = "^2.1.0"
torchvision = "^0.16.0"
torchaudio = "^2.1.0"

# Packaging & Development
pyinstaller = "^6.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.7.0"
isort = "^5.12.0"
ruff = "^0.0.287"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["neomate_ai"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 88
select = ["E", "W", "F", "I", "C", "B", "UP", "N", "YTT", "S", "BLE", "FBT", "B902", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = ["E501", "W503"]
target-version = "py311"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
